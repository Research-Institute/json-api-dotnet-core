{
	"info": {
		"_postman_id": "e52ad62d-5462-4b05-b086-5bdc58032d1c",
		"name": "JsonApiDotNetCoreGettingStarted",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c761c43-9dd3-4747-b08b-d1dba7a63798",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('books');\r",
							"        pm.expect(element.attributes).to.have.all.keys('title', 'publishYear');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/books",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get missing book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "593ae8f1-2c20-43bb-99df-2bd82ac4fa16",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('books');\r",
							"        pm.expect(element.attributes).to.have.all.keys('title', 'publishYear');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/books",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book titles",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "08cde6cb-b0b7-4a22-b079-e9bf7daa3c07",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('books');\r",
							"        pm.expect(element.attributes).to.have.all.keys('title');\r",
							"        pm.expect(element.attributes).to.not.have.any.keys('publishYear');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/books?fields=title",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"books"
					],
					"query": [
						{
							"key": "fields",
							"value": "title"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book titles with authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ea4e07f-a592-41c5-9ed3-97b057df467c",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('books');\r",
							"        pm.expect(element.attributes).to.have.all.keys('title');\r",
							"        pm.expect(element.attributes).to.not.have.any.keys('publishYear');\r",
							"    });\r",
							"\r",
							"    pm.expect(responseBody.included.length).to.eq(3);\r",
							"\r",
							"    responseBody.included.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('people');\r",
							"        pm.expect(element.attributes).to.have.all.keys('name');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/books?fields=title&include=author",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"books"
					],
					"query": [
						{
							"key": "fields",
							"value": "title"
						},
						{
							"key": "include",
							"value": "author"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get paged books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c091cde9-3588-481c-b0ef-223fdbba82ac",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(1);\r",
							"\r",
							"    pm.expect(responseBody.data[0].type).to.eq('books');\r",
							"    pm.expect(responseBody.data[0].attributes.title).to.eq('Gulliver\\'s Travels');\r",
							"    pm.expect(responseBody.data[0].attributes.publishYear).to.eq(1726);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/books?page[size]=1&page[number]=2&sort=title",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"books"
					],
					"query": [
						{
							"key": "page[size]",
							"value": "1"
						},
						{
							"key": "page[number]",
							"value": "2"
						},
						{
							"key": "sort",
							"value": "title"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get books published after 1720",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0b8c847-5a49-448d-bec7-937c33ba8e1d",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(2);\r",
							"    pm.expect(responseBody.data.length).to.eq(2);\r",
							"\r",
							"    pm.expect(responseBody.data[0].type).to.eq('books');\r",
							"    pm.expect(responseBody.data[0].attributes.title).to.eq('Frankenstein');\r",
							"    pm.expect(responseBody.data[0].attributes.publishYear).to.eq(1818);\r",
							"\r",
							"    pm.expect(responseBody.data[1].type).to.eq('books');\r",
							"    pm.expect(responseBody.data[1].attributes.title).to.eq('Gulliver\\'s Travels');\r",
							"    pm.expect(responseBody.data[1].attributes.publishYear).to.eq(1726);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/books?filter=greaterThan(publishYear,'1720')&sort=-publishYear",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"books"
					],
					"query": [
						{
							"key": "filter",
							"value": "greaterThan(publishYear,'1720')"
						},
						{
							"key": "sort",
							"value": "-publishYear"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book author",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6b3ac25b-4f27-415f-a96e-83d59b3f510b",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('people');\r",
							"        pm.expect(element.attributes).to.have.all.keys('name');\r",
							"    });\r",
							"\r",
							"    pm.expect(responseBody.included.length).to.eq(3);\r",
							"\r",
							"    responseBody.included.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('books');\r",
							"        pm.expect(element.attributes).to.have.all.keys('title', 'publishYear');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/people?include=books&page[size]=0,books:0",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"people"
					],
					"query": [
						{
							"key": "include",
							"value": "books"
						},
						{
							"key": "page[size]",
							"value": "0,books:0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get people",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0176dea4-ef64-4798-adbb-929e7345496b",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('people');\r",
							"        pm.expect(element.attributes).to.have.all.keys('name');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/people",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"people"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get people with books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a456bcc6-2234-4bc6-a6d5-f26bfab3cbdb",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('people');\r",
							"        pm.expect(element.attributes).to.have.all.keys('name');\r",
							"    });\r",
							"\r",
							"    pm.expect(responseBody.included.length).to.eq(3);\r",
							"\r",
							"    responseBody.included.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('books');\r",
							"        pm.expect(element.attributes).to.have.all.keys('title', 'publishYear');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/people?include=books&page[size]=0,books:0",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"people"
					],
					"query": [
						{
							"key": "include",
							"value": "books"
						},
						{
							"key": "page[size]",
							"value": "0,books:0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get person with books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "147303da-dbc1-41a4-91f5-004e68d85b0c",
						"exec": [
							"pm.test(\"Correct response is returned\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.api+json');\r",
							"\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.meta.totalResources).to.eq(3);\r",
							"    pm.expect(responseBody.data.length).to.eq(3);\r",
							"\r",
							"    responseBody.data.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('people');\r",
							"        pm.expect(element.attributes).to.have.all.keys('name');\r",
							"    });\r",
							"\r",
							"    pm.expect(responseBody.included.length).to.eq(3);\r",
							"\r",
							"    responseBody.included.forEach(element => {\r",
							"        pm.expect(element.type).to.eq('books');\r",
							"        pm.expect(element.attributes).to.have.all.keys('title', 'publishYear');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/people?include=books&page[size]=0,books:0",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"people"
					],
					"query": [
						{
							"key": "include",
							"value": "books"
						},
						{
							"key": "page[size]",
							"value": "0,books:0"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}